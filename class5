# Mon Feb 08 2016 Shaffer Art 205 @ 1545
# CIS600(400)
# Howard Blair


let me start with the celular atomiton.  a deminstration of artificial life.  he found and got working some software he wrote.  it generates a space time graph.  he will post his source code.

stateTransition is the heart of his code.  and poly(u,x,y).

when he runs it, there is something like a one line wiht white stuff going to the right and colored (yellow, red) going to the left.  this is the film strip that he talked about.  the program is computing the rows individuallly.

this is all generated from years of overwritten java code.  stuff commented out and new stuff written in.  THIS IS NOT GOOD CODE.

poly is the rule being applied (polynominal).  the graph is generated by a random number generator and the colors represent doubles between 0 and 1.  it takes about 100 cycles to organize.

if the conditions are such that the dynamics of the world you are in are balanced correctly (with some robustness - it is relatively resistence to small changes) what you will have is rapid self organization of complex evolving forms.  ken foster in the su physics department has done work where he shows the dynamics of moleculse on wet clay produces something taht you can call living matter in just a few generations.

what is the state transition that takes us from cell to cell, row to row?  how does that work?  how did we find the specific parameters that affect the coefficients of the polynominal.

poly is given the ith cell and the i-1 and i+1 and then apply a "polynominal".  he does a trick to try to get rid of the floating point errors.

(see graph).  a parabola given by f(x) = y=x^2 and a line given by y=x.  where do they cross?  at x=0, 1.  what is the slope of the tagent line at x = 1?  it is 2.

said something about the tagent line is the derivative or something and trying to guess the slope or something.  no idea.

(pic C)
take the function f(x)=ax(1-x) which is an upside down parabola.  take the derivative.  f'(x)=a(1-2x).  plot this:

you can see that a/4 is where the line is flat (at the top of the parabola).  it crosses the x axis at -a.

f'(1) = a/4 or something.  at 1/2 the value of f was a/4.  this is the maximum value of f is a/4.

-----------------------------
go back to pic C

find where f(x)=x and f(x)=ax(1-x) cross:  the answer is x=1-1/a (also at 0).

for what values of \texttt{a} will the tagent line slope be between -1 and 1?

1 > f'(x)?  ->  a(1-2x) = 1 ->  a= 1/(1-2x).  the point is 1-1/a.  therefore a = 1/(1-2(1-1/a)) < 1:
	1-2(1-1/a) < 1/a  ->  1-2-2/a < 1/a ->  -1-2/a < 1/a  ->  -a-2 < 1  ->  -a < -3

	therefore, a < 3 or something


-----------
|f'(x)| < 1
for all x 

if you have something

the limit as n goes to inf f'n(x)/x

variatoins of this is what neutons method is all about.

one of the firsthings neuton did when he developed his calculous.  in britton they have a tutorial system like a recitation session, except in britten, you and a few students would meet with a tutor.  neuton has a tutor named issac barrow.  this guy was the first person to see that:

\integral from a to b of f(x) dx = F(b) - F(a)

barrow didnt do anything with this, but tell neuton.
https://en.wikipedia.org/wiki/Isaac_Barrow

neuton develops elementry calculous.  lietzman developed calculous.  neuton developed it based on infinitesimals.

non-standard analysis
https://en.wikipedia.org/wiki/Non-standard_analysis

we can solve quadratic, cubic, to the fourth (using a trick to move it to cubic) and they cant solve to the fifth equations.  (fifth are actually algorithmically unsolvable.)  see quadratic formula.

this is how you do it:
you want to know where it crosses x axis.  so you take a guess and differentiate the function and get the slope of the tagent line and then use algebra to figure out where that crosses.  take that point and plug it back into your original equation and then take the differental and get the tangent line and now you are closer.  and keep doing this.  you can show that each iteration after the first will get you 1-2 more decimals of accuracy.  but your guess cant be terrible related to how the curve, curves around.  (take the sine wave).

basis of attraction of neutons method is where the root will hit the x axis.  these will form a fractalite method or something.

----------------
back to f(x) = ax(1-x).  what happens when a = 2.  what is the deriviatvite?  f'(x) = a-2ax.  f(x) = x;

if we use the iterative method to figure out the tagent or something we very very quickly hit it.  this is an attractor.  attracting fixed point.  super attracting fixed point.

so if i have a continuous function and i want to be sure it maps 0,1 values to 0,1 value, one way to assure that any error (floating point error) is crushed out, is to be sure that when the function outputs a 1,0 will have a derivative of 0 at that point.
http://math.stackexchange.com/questions/388219/strength-of-attraction-of-fixed-points


x -> f -> some_trig_of_the_function -> y

this will stamp out error.

which trig function to use?

domain and range are 0,1 so we probably want a trig function of the same and make sure things between stay between and such.

suppose you start with the sine function.  we know what hte derivative of sine is cosine.  and derivative of cosine is -sine. etc etc.  if you plug in 0, sine produces 0.  but the derivative (cosine) is 1.  no good.  but can we shift this?  but there is another problem too.

if you shift the sine curve to make it overlay cosine, if youput in a 1, ou get something out between 0 and 1 and thats no good.  instead:  squeeze the function so that when you put in a 1, out pops a 0.  how do you do that?  well, you multiply this by something.  cosine of \pi/2 is 0. so what we get is:

1 / ( cos(\pi/2) + 1)

this method gets out the error.

----------------


if you have an evolving system of descrete states:
Q= { q1, .., qn}
some rule that tells how the state transitions:
f(q) = qi -> qj

lets say there are transitions:
s1 -> s2 -> s3

what is the probability of being in state qi and look at that for each of the states.  then you do shannon entropy:  log2

look at a block, how many possibilities for the block?  for 3 blocks with 0,1 values, there are only 8 possibilities.  look at a long run and count the proportion of the occurances for the various states.  that will give you the probability of that 0,1 value for that block.  that gives you an entropy estimate.  computationally explor which cells you look at.  what if you partition stuff.

with the shannon entory, search out leopinov exponents.



-----------------
k is I(2).  from the thing agove.
in information theory, you set I(2) to be -1.  in physics, you set it to boltzmanns constant.
------------------





next assignment:
any way you can, take a 400 cell ring. let the values in the cell be 0 or 1.  just use mod 2 arithmetic for the update rule.

every one of the 8 triples get mapped to a 0/1 value.
look up rule-one-ten.  steven rothman.  wilfman?

fill the bits in the output column somethin.

calculate the shannon entropy of a run of 2k iterations.


there are 8 roles in that table.  how many ways can you fill it in?  256 rules.